// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingSite.Data;

#nullable disable

namespace ShoppingSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShoppingSite.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShoppingSite.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ShoppingSite.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Portable speaker with bass boost",
                            ImageUrl = "/images/speaker.jpg",
                            Name = "Bluetooth Speaker",
                            Price = 1999m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Track fitness & notifications",
                            ImageUrl = "/images/watch.jpg",
                            Name = "Smart Watch",
                            Price = 3499m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Noise cancelling, water resistant",
                            ImageUrl = "/images/earbuds.jpg",
                            Name = "Wireless Earbuds",
                            Price = 2999m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Water-resistant with USB port",
                            ImageUrl = "/images/bag.jpg",
                            Name = "Laptop Bag",
                            Price = 1899m
                        },
                        new
                        {
                            Id = 5,
                            Description = "RGB lights and high DPI",
                            ImageUrl = "/images/mouse.jpg",
                            Name = "Gaming Mouse",
                            Price = 1499m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Tracks steps and heart rate",
                            ImageUrl = "/images/band.jpg",
                            Name = "Fitness Band",
                            Price = 1299m
                        },
                        new
                        {
                            Id = 7,
                            Description = "10000 mAh, fast charging",
                            ImageUrl = "/images/powerbank.jpg",
                            Name = "Power Bank",
                            Price = 999m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Compact and rechargeable",
                            ImageUrl = "/images/keyboard.jpg",
                            Name = "Wireless Keyboard",
                            Price = 1699m
                        },
                        new
                        {
                            Id = 9,
                            Description = "1080p webcam with mic",
                            ImageUrl = "/images/webcam.jpg",
                            Name = "Webcam HD",
                            Price = 2099m
                        });
                });

            modelBuilder.Entity("ShoppingSite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShoppingSite.Models.OrderItem", b =>
                {
                    b.HasOne("ShoppingSite.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShoppingSite.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
